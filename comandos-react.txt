Comandos Front-End

1 - Instalar o Git (https://git-scm.com/)
2 - Instalar o Node(https://nodejs.org/en)

// Criar projeto
npx create-next-app@latest introducao --use-npm --example https://github.com/vercel/next-learn/tree/master/basics/learn-starter

// Instalar o react bootstrap
npm install react-bootstrap bootstrap

// Comando para caso o npm esteja desatualizado!!
npm install -g npm@9.6.2

//comando para instalar o Axios, que faz requisiões http, como GET, POST, é necessário para utilização
npm install axios

// Executar o projeto (startar o servidor)
npm run dev

// No index.js e todas as páginas criadas colar para funcionar o bootstrap:
import 'bootstrap/dist/css/bootstrap.min.css';

// instalar essa extensão ↓↓ para conseguir criar o "race" automaticamente
ES7+ React/Redux/React-Native snippets

// Criar pasta chamada "components"
// Todos os arquivos dentro dessa pasta tem que iniciar com letra maiúscula

// Dentro do arquivo criado acima ↑↑
// Digitar o comando "race" para criar os codigos iniciais do arquivo

// Código para fazer um loop de um array exibindo os vários dados do array na tela
{carros.map(carro => (
    <p>{carro}</p>
))}

// Comando para fazer a requisição dos dados json da API através do método hook, esse método é o utilizado no react antigo logo 'const exemplo = () => {'
useEffect(()=>{
        
        apiFilmes.get('/movie/popular').then(resultado=>{setFilmes(resultado.data.results)})//<-pode ser qualquer nome

    },[])

// Comando para fazer a requisição dos dados json da API através do método do next, esse método é o utilizado no react novo logo após o export no final da página
const exemplo = ({filmes}) => {
.
.
.
.
...}

export async function getServerSideProps(context) {

    const resultado = await apiFilmes.get('/movie/now_playing')
    const filmes = resultado.data.results

    return {
      props: {filmes}, // will be passed to the page component as props
    }
  }